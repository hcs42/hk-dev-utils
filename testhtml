#!/usr/bin/python

# Executes different versions of Heapkeeper and compares the HTML pages
# generated by them. Run "testhtml --help" to learn more.

import hkcustomlib
import hkutils
import optparse
import os
import shutil
import subprocess
import sys

def make_html(commit, options):
    os.mkdir(os.path.join('testhtml_results', commit))
    configstr = """\
[paths]
mail=%s
html=testhtml_results/%s/html
""" % (options.heap_dir, commit)

    configfile = os.path.join('testhtml_results', commit, 'cfg.cfg')
    hkutils.string_to_file(configstr, configfile)

    subprocess.call(['git', 'checkout', commit])
    subprocess.call(['rm', '-f', '*.pyc'])

    subprocess.call([
        './hk.py',
        '--configfile=testhtml_results/' + commit + '/cfg.cfg',
        '-c', 'import hkgen',
        # We don't want the 'Generated by Hk on...' header because it messes up
        # the diff:
        '-c', 'hkgen.Generator.print_html_header_info = lambda self: ""',
        '-c', 'g()',
        '-c', 'q()',
    ] + options.hk_args)


def parse_args():
    usage = """\
Usage: testhtml [options] [HEAP_DIR] [COMMIT]...
    Shows the differences between the HTML pages generated by the given
    versions of Heapkeeper. COMMITs should be SHA1 IDs, at least 7 characters
    long. (They will be trimmed to 7 characters anyway.) Diff file will be
    written into testhtml_results/diffs/*.

Example:
    $ testhtml /home/me/heap a0e4d12 9528e72

Note:
    testhtml needs some Heapkeeper modules."""

    parser = optparse.OptionParser(usage=usage)

    parser.add_option('-a', '--hkargs', dest='hk_args',
                      help='arguments to give to Heapkeeper',
                      action='store', default=[])
    (options, args) = parser.parse_args()

    # We use editor_to_editor_list because we need the same tricked we needed
    # there.
    options.hk_args = hkcustomlib.editor_to_editor_list(options.hk_args)

    if len(args) < 2:
        print "Not enough arguments. Use --help."
        sys.exit(1)

    options.heap_dir = args[0]
    args = args[1:]

    return options, args

def main():

    options, args = parse_args()

    # Clearing the 'testhtml_results' directory
    if os.path.exists('testhtml_results'):
        shutil.rmtree('testhtml_results')
    os.mkdir('testhtml_results')
    os.mkdir('testhtml_results/diffs')

    # Getting the short commit names
    commits = []
    for commit_long in args:
        if len(commit_long) < 7:
            print 'Commit name too short, it should be at least 7 characters: %s' \
                  % (commit_long,)
            sys.exit(1)
        else:
            commits.append(commit_long[0:7])
    print 'Commits: ', commits

    # Creating the HTML directories
    for commit in commits:
        make_html(commit, options)

    # Doing the diffs
    for i in range(len(commits) - 1):
        file1 = os.path.join('testhtml_results', commits[i], 'html')
        file2 = os.path.join('testhtml_results', commits[i + 1], 'html')
        output_file = \
            os.path.join(
                'testhtml_results',
                'diffs',
                '%02d_%s_%s' % (i, commits[i], commits[i + 1]))

        output = subprocess.Popen(["diff", "-ur", file1, file2],
                                  stdout=subprocess.PIPE).communicate()[0]
        hkutils.string_to_file(output, output_file)

if __name__ == '__main__':
    main()
